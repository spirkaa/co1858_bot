import logging
import re
import ujson
from aiotg import TgBot
from content.scraper import send_news, send_video
from content.shedule import send_shedule
from settings.settings import CMDS, GROUPS, TEACHERS
from keyboard import send_keyboard, keyboard, teachers_btns

logger = logging.getLogger("co1858_bot")

with open("settings/config.json") as cfg:
    config = ujson.load(cfg)

bot = TgBot(**config)


space = r'[\s\-]*'
teachers_re = ('|').join(TEACHERS)
cmds_re = ('|').join(CMDS)
groups_re = r'[0-9]{1,2}' + space + '[–∞–±–≤–≥–∫–ª—Å–ê–ë–í–ì–ö–õ–°]'
add_space = re.compile('(^[0-9]{1,2})(' + space + ')([–∞–±–≤–≥–∫–ª—Å–ê–ë–í–ì–ö–õ–°])')
regex = r'/?(({1})|({2})){0}({3})?'.format(
    space, teachers_re, groups_re, cmds_re)


@bot.command(regex)
def shedule(chat, match):
    logger.debug('%s (%s) %s', chat.sender, chat.sender['id'], match.groups())
    if match.group(2):
        who, cmd = match.group(2, 4)
    if match.group(3):
        who = re.sub(add_space, r'\1 \3', match.group(3))
        cmd = match.group(4)
    return send_shedule(chat, who.capitalize(), cmd)


@bot.command(r'(/menu|/?–º–µ–Ω—é)')
def menu(chat, match):
    text = '–í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –º–µ–Ω—é üëá'
    kb = keyboard()
    return send_keyboard(chat, match.group(1), text, kb)


@bot.command(r'(/teachers|/?—É—á–∏—Ç–µ–ª—è)')
def teachers_menu(chat, match):
    text = 'üíº –í—ã–±–µ—Ä–∏ —É—á–∏—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è (–º–µ–Ω—é –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç—Å—è)'
    kb = keyboard(teachers_btns())
    return send_keyboard(chat, match.group(1), text, kb)


@bot.command(r'(/groups|/?–∫–ª–∞—Å—Å—ã)')
def groups_menu(chat, match):
    text = 'üë• –í—ã–±–µ—Ä–∏ –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è (–º–µ–Ω—é –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç—Å—è)'
    kb = keyboard(GROUPS[:])
    return send_keyboard(chat, match.group(1), text, kb)


@bot.command(r'(/bell|/?–∑–≤–æ–Ω–∫–∏)')
def bell(chat, match):
    logger.info('%s: –ó–≤–æ–Ω–∫–∏', chat.sender['id'])
    text = """
üîî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ –≤ –¶–û ‚Ññ 1858:
1. 08:30 ‚Äì 09:15\n2. 09:30 ‚Äì 10:15\n3. 10:30 ‚Äì 11:20
4. 11:35 ‚Äì 12:20\n5. 12:40 ‚Äì 13:25\n6. 13:45 ‚Äì 14:30
7. 14:50 ‚Äì 15:35\n8. 15:50 ‚Äì 16:35\n9. 16:50 ‚Äì 17:35
    """
    return chat.send_text(text)


@bot.command(r'(/news|/?–Ω–æ–≤–æ—Å—Ç–∏)')
def news(chat, match):
    logger.info('%s: –ù–æ–≤–æ—Å—Ç–∏', chat.sender['id'])
    return send_news(chat)


@bot.command(r'(/video|/?–≤–∏–¥–µ–æ)')
def video(chat, match):
    logger.info('%s: –í–∏–¥–µ–æ', chat.sender['id'])
    return send_video(chat)


@bot.command(u"\U0001F4F0" + r' (\d{1,2})\. (.*)')
def news_choose(chat, match):
    logger.info('%s: –ù–æ–≤–æ—Å—Ç–∏ –º–µ–Ω—é', chat.sender['id'])
    return send_news(chat, int(match.group(1)))


@bot.command(u"\U0001F3A5" + r' (\d{1,2})\. (.*)')
def video_choose(chat, match):
    logger.info('%s: –í–∏–¥–µ–æ –º–µ–Ω—é', chat.sender['id'])
    return send_video(chat, int(match.group(1)))


@bot.default
@bot.command(r'(/start|/?help)')
def usage(chat, match):
    text = """
‚≠ê –ü—Ä–∏–≤–µ—Ç! –Ø –∑–Ω–∞—é –≤—Å—ë –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –¶–µ–Ω—Ç—Ä–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è ‚Ññ 1858.

üìÖ –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é —É—á–∏—Ç–µ–ª—è:
11 –∞ –∑–∞–≤—Ç—Ä–∞
–õ–∞–∑–∞—Ä–µ–≤–∞ —á–µ—Ç–≤–µ—Ä–≥

üëá –ê –ª—É—á—à–µ –ø—Ä–æ—Å—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –º–µ–Ω—é üëá

/teachers - üíº —Å–ø–∏—Å–æ–∫ —É—á–∏—Ç–µ–ª–µ–π
/groups - üë• —Å–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤
/bell - üîî —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤

üí¨ –û—à–∏–±–∫–∏, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è: @spirkaa
    """
    kb = keyboard()
    if isinstance(match, dict):
        logtext = match['text']
    else:
        logtext = match.group(1)
    return send_keyboard(chat, logtext, text, kb)


if __name__ == '__main__':
    logging.basicConfig(
        format='%(asctime)s [%(name)s:%(lineno)s] %(levelname)s - %(message)s',
        level=logging.INFO)
    bot.run()
